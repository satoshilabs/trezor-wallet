'use strict';

exports.__esModule = true;

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

exports.create = create;
exports.createAsync = createAsync;
exports.resolveTimeoutPromise = resolveTimeoutPromise;
exports.rejectTimeoutPromise = rejectTimeoutPromise;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function create(arg, device) {
    var _this = this;

    var localResolve = function localResolve(t) {};
    var localReject = function localReject(e) {};
    var id = void 0;

    var promise = new Promise(function () {
        var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(resolve, reject) {
            return _regenerator2.default.wrap(function _callee$(_context) {
                while (1) {
                    switch (_context.prev = _context.next) {
                        case 0:
                            localResolve = resolve;
                            localReject = reject;

                            if (!(typeof arg === 'function')) {
                                _context.next = 11;
                                break;
                            }

                            _context.prev = 3;
                            _context.next = 6;
                            return arg();

                        case 6:
                            _context.next = 11;
                            break;

                        case 8:
                            _context.prev = 8;
                            _context.t0 = _context['catch'](3);

                            reject(_context.t0);

                        case 11:
                            if (typeof arg === 'string') id = arg;

                        case 12:
                        case 'end':
                            return _context.stop();
                    }
                }
            }, _callee, _this, [[3, 8]]);
        }));

        return function (_x, _x2) {
            return _ref.apply(this, arguments);
        };
    }());

    return {
        id: id,
        device: device,
        resolve: localResolve,
        reject: localReject,
        promise: promise
    };
}

function createAsync(innerFn) {
    var _this2 = this;

    var localResolve = function localResolve(t) {};
    var localReject = function localReject(e) {};

    var promise = new Promise(function (resolve, reject) {
        localResolve = resolve;
        localReject = reject;
    });

    var inner = function () {
        var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2() {
            return _regenerator2.default.wrap(function _callee2$(_context2) {
                while (1) {
                    switch (_context2.prev = _context2.next) {
                        case 0:
                            _context2.next = 2;
                            return innerFn();

                        case 2:
                        case 'end':
                            return _context2.stop();
                    }
                }
            }, _callee2, _this2);
        }));

        return function inner() {
            return _ref2.apply(this, arguments);
        };
    }();

    return {
        resolve: localResolve,
        reject: localReject,
        promise: promise,
        run: function run() {
            inner();
            return promise;
        }
    };
}

function resolveTimeoutPromise(delay, result) {
    return new Promise(function (resolve) {
        setTimeout(function () {
            resolve(result);
        }, delay);
    });
}

function rejectTimeoutPromise(delay, error) {
    return new Promise(function (resolve, reject) {
        setTimeout(function () {
            reject(error);
        }, delay);
    });
}